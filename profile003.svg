<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: wordcount03 Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 742)">
<title>wordcount03</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-742 904,-742 904,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-579 8,-730 534,-730 534,-579 8,-579"/>
</g>
<!-- File: wordcount03 -->
<g id="node1" class="node">
<title>File: wordcount03</title>
<g id="a_node1"><a xlink:title="wordcount03">
<polygon fill="#f8f8f8" stroke="black" points="525.5,-722 16.5,-722 16.5,-587 525.5,-587 525.5,-722"/>
<text text-anchor="start" x="24.5" y="-705.2" font-family="Times,serif" font-size="16.00">File: wordcount03</text>
<text text-anchor="start" x="24.5" y="-687.2" font-family="Times,serif" font-size="16.00">Type: cpu</text>
<text text-anchor="start" x="24.5" y="-669.2" font-family="Times,serif" font-size="16.00">Time: Feb 13, 2024 at 12:44pm (UTC)</text>
<text text-anchor="start" x="24.5" y="-651.2" font-family="Times,serif" font-size="16.00">Duration: 330.41ms, Total samples = 130ms (39.35%)</text>
<text text-anchor="start" x="24.5" y="-633.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 130ms, 100% of 130ms total</text>
<text text-anchor="start" x="24.5" y="-596.2" font-family="Times,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="main.main (120ms)">
<polygon fill="#edd5d5" stroke="#b20400" points="715,-536 473,-536 473,-424 715,-424 715,-536"/>
<text text-anchor="middle" x="594" y="-512.8" font-family="Times,serif" font-size="24.00">main</text>
<text text-anchor="middle" x="594" y="-486.8" font-family="Times,serif" font-size="24.00">main</text>
<text text-anchor="middle" x="594" y="-460.8" font-family="Times,serif" font-size="24.00">50ms (38.46%)</text>
<text text-anchor="middle" x="594" y="-434.8" font-family="Times,serif" font-size="24.00">of 120ms (92.31%)</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="unicode.IsSpace (20ms)">
<polygon fill="#ede2da" stroke="#b26429" points="528.5,-358 367.5,-358 367.5,-287 528.5,-287 528.5,-358"/>
<text text-anchor="middle" x="448" y="-338.8" font-family="Times,serif" font-size="19.00">unicode</text>
<text text-anchor="middle" x="448" y="-317.8" font-family="Times,serif" font-size="19.00">IsSpace</text>
<text text-anchor="middle" x="448" y="-296.8" font-family="Times,serif" font-size="19.00">20ms (15.38%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N4 -->
<g id="edge4" class="edge">
<title>N1&#45;&gt;N4</title>
<g id="a_edge4"><a xlink:title="main.main &#45;&gt; unicode.IsSpace (20ms)">
<path fill="none" stroke="#b26429" d="M542.11,-423.74C524.19,-404.64 504.4,-383.57 487.61,-365.69"/>
<polygon fill="#b26429" stroke="#b26429" points="490.01,-363.13 480.61,-358.24 484.91,-367.92 490.01,-363.13"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="main.main &#45;&gt; unicode.IsSpace (20ms)">
<text text-anchor="middle" x="548" y="-387.3" font-family="Times,serif" font-size="14.00"> 20ms</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node9" class="node">
<title>N9</title>
<g id="a_node9"><a xlink:title="main.readbyte (50ms)">
<polygon fill="#eddbd5" stroke="#b22c00" points="641.5,-340.5 546.5,-340.5 546.5,-304.5 641.5,-304.5 641.5,-340.5"/>
<text text-anchor="middle" x="594" y="-329.6" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="594" y="-320.6" font-family="Times,serif" font-size="8.00">readbyte</text>
<text text-anchor="middle" x="594" y="-311.6" font-family="Times,serif" font-size="8.00">0 of 50ms (38.46%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N9 -->
<g id="edge2" class="edge">
<title>N1&#45;&gt;N9</title>
<g id="a_edge2"><a xlink:title="main.main &#45;&gt; main.readbyte (50ms)">
<path fill="none" stroke="#b22c00" stroke-width="2" d="M594,-423.74C594,-399.02 594,-370.99 594,-350.87"/>
<polygon fill="#b22c00" stroke="#b22c00" stroke-width="2" points="597.5,-350.85 594,-340.85 590.5,-350.85 597.5,-350.85"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="main.main &#45;&gt; main.readbyte (50ms)">
<text text-anchor="middle" x="621.5" y="-394.8" font-family="Times,serif" font-size="14.00"> 50ms</text>
<text text-anchor="middle" x="621.5" y="-379.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="runtime.main (120ms)">
<polygon fill="#edd5d5" stroke="#b20400" points="644,-672.5 544,-672.5 544,-636.5 644,-636.5 644,-672.5"/>
<text text-anchor="middle" x="594" y="-661.6" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="594" y="-652.6" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="594" y="-643.6" font-family="Times,serif" font-size="8.00">0 of 120ms (92.31%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N1 -->
<g id="edge1" class="edge">
<title>N2&#45;&gt;N1</title>
<g id="a_edge1"><a xlink:title="runtime.main &#45;&gt; main.main (120ms)">
<path fill="none" stroke="#b20400" stroke-width="5" d="M594,-636.33C594,-615.41 594,-578.86 594,-546.46"/>
<polygon fill="#b20400" stroke="#b20400" stroke-width="5" points="598.38,-546.11 594,-536.11 589.63,-546.11 598.38,-546.11"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="runtime.main &#45;&gt; main.main (120ms)">
<text text-anchor="middle" x="620.5" y="-557.8" font-family="Times,serif" font-size="14.00"> 120ms</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="bufio.(*Reader).Read (50ms)">
<polygon fill="#eddbd5" stroke="#b22c00" points="697,-236 491,-236 491,-113 697,-113 697,-236"/>
<text text-anchor="middle" x="594" y="-215.2" font-family="Times,serif" font-size="21.00">bufio</text>
<text text-anchor="middle" x="594" y="-192.2" font-family="Times,serif" font-size="21.00">(*Reader)</text>
<text text-anchor="middle" x="594" y="-169.2" font-family="Times,serif" font-size="21.00">Read</text>
<text text-anchor="middle" x="594" y="-146.2" font-family="Times,serif" font-size="21.00">30ms (23.08%)</text>
<text text-anchor="middle" x="594" y="-123.2" font-family="Times,serif" font-size="21.00">of 50ms (38.46%)</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="runtime.asyncPreempt (10ms)">
<polygon fill="#ede8e4" stroke="#b2926d" points="557.5,-62 424.5,-62 424.5,0 557.5,0 557.5,-62"/>
<text text-anchor="middle" x="491" y="-45.2" font-family="Times,serif" font-size="16.00">runtime</text>
<text text-anchor="middle" x="491" y="-27.2" font-family="Times,serif" font-size="16.00">asyncPreempt</text>
<text text-anchor="middle" x="491" y="-9.2" font-family="Times,serif" font-size="16.00">10ms (7.69%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N5 -->
<g id="edge5" class="edge">
<title>N3&#45;&gt;N5</title>
<g id="a_edge5"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.asyncPreempt (10ms)">
<path fill="none" stroke="#b2926d" d="M549.72,-112.67C539.25,-98.29 528.38,-83.36 518.88,-70.3"/>
<polygon fill="#b2926d" stroke="#b2926d" points="521.57,-68.04 512.85,-62.02 515.91,-72.16 521.57,-68.04"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.asyncPreempt (10ms)">
<text text-anchor="middle" x="559" y="-83.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="runtime.memmove (10ms)">
<polygon fill="#ede8e4" stroke="#b2926d" points="706,-62 576,-62 576,0 706,0 706,-62"/>
<text text-anchor="middle" x="641" y="-45.2" font-family="Times,serif" font-size="16.00">runtime</text>
<text text-anchor="middle" x="641" y="-27.2" font-family="Times,serif" font-size="16.00">memmove</text>
<text text-anchor="middle" x="641" y="-9.2" font-family="Times,serif" font-size="16.00">10ms (7.69%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N6 -->
<g id="edge6" class="edge">
<title>N3&#45;&gt;N6</title>
<g id="a_edge6"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.memmove (10ms)">
<path fill="none" stroke="#b2926d" d="M614.2,-112.67C618.8,-98.84 623.56,-84.49 627.78,-71.8"/>
<polygon fill="#b2926d" stroke="#b2926d" points="631.2,-72.61 631.03,-62.02 624.56,-70.41 631.2,-72.61"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.memmove (10ms)">
<text text-anchor="middle" x="647" y="-83.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node">
<title>N7</title>
<g id="a_node7"><a xlink:title="runtime/pprof.elfBuildID (10ms)">
<polygon fill="#ede8e4" stroke="#b2926d" points="900,-62 770,-62 770,0 900,0 900,-62"/>
<text text-anchor="middle" x="835" y="-45.2" font-family="Times,serif" font-size="16.00">pprof</text>
<text text-anchor="middle" x="835" y="-27.2" font-family="Times,serif" font-size="16.00">elfBuildID</text>
<text text-anchor="middle" x="835" y="-9.2" font-family="Times,serif" font-size="16.00">10ms (7.69%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node">
<title>N8</title>
<g id="a_node8"><a xlink:title="runtime/pprof.profileWriter (10ms)">
<polygon fill="#ede8e4" stroke="#b2926d" points="879.5,-672.5 790.5,-672.5 790.5,-636.5 879.5,-636.5 879.5,-672.5"/>
<text text-anchor="middle" x="835" y="-661.6" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="835" y="-652.6" font-family="Times,serif" font-size="8.00">profileWriter</text>
<text text-anchor="middle" x="835" y="-643.6" font-family="Times,serif" font-size="8.00">0 of 10ms (7.69%)</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node11" class="node">
<title>N11</title>
<g id="a_node11"><a xlink:title="runtime/pprof.newProfileBuilder (10ms)">
<polygon fill="#ede8e4" stroke="#b2926d" points="879.5,-498 790.5,-498 790.5,-462 879.5,-462 879.5,-498"/>
<text text-anchor="middle" x="835" y="-487.1" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="835" y="-478.1" font-family="Times,serif" font-size="8.00">newProfileBuilder</text>
<text text-anchor="middle" x="835" y="-469.1" font-family="Times,serif" font-size="8.00">0 of 10ms (7.69%)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N11 -->
<g id="edge10" class="edge">
<title>N8&#45;&gt;N11</title>
<g id="a_edge10"><a xlink:title="runtime/pprof.profileWriter &#45;&gt; runtime/pprof.newProfileBuilder (10ms)">
<path fill="none" stroke="#b2926d" d="M835,-636.33C835,-606.36 835,-544.3 835,-508.35"/>
<polygon fill="#b2926d" stroke="#b2926d" points="838.5,-508.1 835,-498.1 831.5,-508.1 838.5,-508.1"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="runtime/pprof.profileWriter &#45;&gt; runtime/pprof.newProfileBuilder (10ms)">
<text text-anchor="middle" x="857" y="-557.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N3 -->
<g id="edge3" class="edge">
<title>N9&#45;&gt;N3</title>
<g id="a_edge3"><a xlink:title="main.readbyte &#45;&gt; bufio.(*Reader).Read (50ms)">
<path fill="none" stroke="#b22c00" stroke-width="2" d="M594,-304.47C594,-289.92 594,-267.97 594,-246.27"/>
<polygon fill="#b22c00" stroke="#b22c00" stroke-width="2" points="597.5,-246.02 594,-236.02 590.5,-246.02 597.5,-246.02"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="main.readbyte &#45;&gt; bufio.(*Reader).Read (50ms)">
<text text-anchor="middle" x="616" y="-257.8" font-family="Times,serif" font-size="14.00"> 50ms</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node10" class="node">
<title>N10</title>
<g id="a_node10"><a xlink:title="runtime/pprof.(*profileBuilder).readMapping (10ms)">
<polygon fill="#ede8e4" stroke="#b2926d" points="879.5,-344.5 790.5,-344.5 790.5,-300.5 879.5,-300.5 879.5,-344.5"/>
<text text-anchor="middle" x="835" y="-334.1" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="835" y="-325.1" font-family="Times,serif" font-size="8.00">(*profileBuilder)</text>
<text text-anchor="middle" x="835" y="-316.1" font-family="Times,serif" font-size="8.00">readMapping</text>
<text text-anchor="middle" x="835" y="-307.1" font-family="Times,serif" font-size="8.00">0 of 10ms (7.69%)</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node12" class="node">
<title>N12</title>
<g id="a_node12"><a xlink:title="runtime/pprof.parseProcSelfMaps (10ms)">
<polygon fill="#ede8e4" stroke="#b2926d" points="881.5,-192.5 788.5,-192.5 788.5,-156.5 881.5,-156.5 881.5,-192.5"/>
<text text-anchor="middle" x="835" y="-181.6" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="835" y="-172.6" font-family="Times,serif" font-size="8.00">parseProcSelfMaps</text>
<text text-anchor="middle" x="835" y="-163.6" font-family="Times,serif" font-size="8.00">0 of 10ms (7.69%)</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N12 -->
<g id="edge7" class="edge">
<title>N10&#45;&gt;N12</title>
<g id="a_edge7"><a xlink:title="runtime/pprof.(*profileBuilder).readMapping &#45;&gt; runtime/pprof.parseProcSelfMaps (10ms)">
<path fill="none" stroke="#b2926d" d="M835,-300.27C835,-274.58 835,-231.25 835,-203.02"/>
<polygon fill="#b2926d" stroke="#b2926d" points="838.5,-202.65 835,-192.65 831.5,-202.65 838.5,-202.65"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="runtime/pprof.(*profileBuilder).readMapping &#45;&gt; runtime/pprof.parseProcSelfMaps (10ms)">
<text text-anchor="middle" x="857" y="-257.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N10 -->
<g id="edge8" class="edge">
<title>N11&#45;&gt;N10</title>
<g id="a_edge8"><a xlink:title="runtime/pprof.newProfileBuilder &#45;&gt; runtime/pprof.(*profileBuilder).readMapping (10ms)">
<path fill="none" stroke="#b2926d" d="M835,-461.76C835,-435.98 835,-386.94 835,-354.74"/>
<polygon fill="#b2926d" stroke="#b2926d" points="838.5,-354.52 835,-344.52 831.5,-354.52 838.5,-354.52"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="runtime/pprof.newProfileBuilder &#45;&gt; runtime/pprof.(*profileBuilder).readMapping (10ms)">
<text text-anchor="middle" x="857" y="-387.3" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N7 -->
<g id="edge9" class="edge">
<title>N12&#45;&gt;N7</title>
<g id="a_edge9"><a xlink:title="runtime/pprof.parseProcSelfMaps &#45;&gt; runtime/pprof.elfBuildID (10ms)">
<path fill="none" stroke="#b2926d" d="M835,-156.43C835,-135.77 835,-100.29 835,-72.49"/>
<polygon fill="#b2926d" stroke="#b2926d" points="838.5,-72.26 835,-62.26 831.5,-72.26 838.5,-72.26"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="runtime/pprof.parseProcSelfMaps &#45;&gt; runtime/pprof.elfBuildID (10ms)">
<text text-anchor="middle" x="857" y="-83.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
</g>
</g></svg>
